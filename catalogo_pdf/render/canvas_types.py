"""Tipos utilitarios para definir interfaces de canvas."""

from __future__ import annotations

from typing import Protocol, runtime_checkable


@runtime_checkable
class CanvasProtocolo(Protocol):
    """Interfaz minima usada por las rutinas de renderizado."""

    def saveState(self) -> None: ...
    def restoreState(self) -> None: ...
    def setFillColor(self, color) -> None: ...
    def rect(self, x: float, y: float, width: float, height: float, stroke: int = ..., fill: int = ...) -> None: ...
    def roundRect(self, x: float, y: float, width: float, height: float, radius: float, stroke: int = ..., fill: int = ...) -> None: ...
    def setFont(self, name: str, size: float) -> None: ...
    def drawString(self, x: float, y: float, text: str) -> None: ...
    def drawCentredString(self, x: float, y: float, text: str) -> None: ...
    def stringWidth(self, text: str, fontName: str, fontSize: float) -> float: ...
    def drawImage(self, image, x: float, y: float, width: float = ..., height: float = ..., preserveAspectRatio: bool = ..., mask=None) -> None: ...
    def circle(self, x_centro: float, y_centro: float, radio: float, stroke: int = ..., fill: int = ...) -> None: ...
    def setStrokeColor(self, color) -> None: ...
    def setLineWidth(self, width: float) -> None: ...
    def line(self, x1: float, y1: float, x2: float, y2: float) -> None: ...
    def showPage(self) -> None: ...
    def save(self) -> None: ...


CanvasTipo = CanvasProtocolo
